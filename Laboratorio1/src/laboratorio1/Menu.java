/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package laboratorio1;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Johnny
 */
public class Menu extends javax.swing.JFrame {

    /**
     * Creates new form Menu
     */
    int sw = 0, x1, y1, s;
    double preciototal=0;
    boolean clickmenu = false;
    static int mesa1;
    static List Pedidos = new List();
    List platos = new List();
    static List MesasMT = MeserosTabla.mesa;
    String pedidos1 = null;
    static int numpe = -1;

    public Menu() {
        this.setResizable(false);
        initComponents();
        mesa1 = MeserosTabla.x + 1;
        this.setLocationRelativeTo(null);
        lb1.setVisible(false);
        bt1.setVisible(false);
        bt1.setEnabled(false);
        lb2.setVisible(false);
        bt3.setVisible(false);
        bt3.setEnabled(false);
        bt2.setEnabled(false);
        bt5.setEnabled(false);
        bt6.setEnabled(false);
        bt6.setVisible(false);
        lb3.setText("Menu");
        lbMesa.setText("Mesa " + mesa1);
        int cantpl = consultarFichero();
        generarTabla(TablaMenu, cantpl);
        TablaMenu.setDefaultEditor(Object.class, null);
        this.setLocationRelativeTo(null);
    }

    void generarTabla(JTable tabla, int cant) {
        DefaultTableModel model = new DefaultTableModel(cant, 3);
        tabla.setModel(model);
        mostrarFichero();
        JTableHeader th = TablaMenu.getTableHeader();
        TableColumnModel tcm = th.getColumnModel();
        TableColumn tc = tcm.getColumn(0);
        tc.setHeaderValue("Plato");
        tc.setResizable(false);
        TableColumn tc1 = tcm.getColumn(1);
        tc1.setHeaderValue("Ingredientes");
        tc1.setResizable(false);
        TableColumn tc2 = tcm.getColumn(2);
        tc2.setHeaderValue("Precio");
        tc2.setResizable(false);
        th.repaint();
    }

    public static int consultarFichero() {
        FileReader fr = null;
        int c = 0;
        try {
            File fichero = new File("platos.txt");
            fr = new FileReader(fichero);
            BufferedReader br = new BufferedReader(fr);
            String linea;
            linea = br.readLine();
            while (linea != null) {
                c = c + 1;
                linea = br.readLine();
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        } finally {
            try {
                if (fr != null) {
                    fr.close();
                }
            } catch (Exception e) {
                System.out.println(e.getMessage());
            }
        }
        return c;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        FacturaDialog = new javax.swing.JDialog();
        jScrollPane2 = new javax.swing.JScrollPane();
        FacturaTable = new javax.swing.JTable();
        FacturaLB = new javax.swing.JLabel();
        TotalLB = new javax.swing.JLabel();
        CostoLB = new javax.swing.JLabel();
        IVALB = new javax.swing.JLabel();
        IVACLB = new javax.swing.JLabel();
        lb2 = new javax.swing.JLabel();
        bt1 = new javax.swing.JButton();
        bt2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaMenu = new javax.swing.JTable();
        lb1 = new javax.swing.JLabel();
        bt3 = new javax.swing.JButton();
        lb3 = new javax.swing.JLabel();
        lbMesa = new javax.swing.JLabel();
        lb4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        bt5 = new javax.swing.JButton();
        tf1 = new javax.swing.JTextField();
        bt6 = new javax.swing.JButton();

        FacturaDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        FacturaDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                FacturaDialogWindowClosed(evt);
            }
        });

        FacturaTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "Plato", "Cantidad", "Precio.Unidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(FacturaTable);
        if (FacturaTable.getColumnModel().getColumnCount() > 0) {
            FacturaTable.getColumnModel().getColumn(0).setResizable(false);
            FacturaTable.getColumnModel().getColumn(1).setResizable(false);
            FacturaTable.getColumnModel().getColumn(2).setResizable(false);
        }

        FacturaLB.setText("Factura");

        TotalLB.setText("Costo Total:");

        IVALB.setText("IVA:");

        javax.swing.GroupLayout FacturaDialogLayout = new javax.swing.GroupLayout(FacturaDialog.getContentPane());
        FacturaDialog.getContentPane().setLayout(FacturaDialogLayout);
        FacturaDialogLayout.setHorizontalGroup(
            FacturaDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FacturaDialogLayout.createSequentialGroup()
                .addGroup(FacturaDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FacturaDialogLayout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(FacturaDialogLayout.createSequentialGroup()
                        .addGap(171, 171, 171)
                        .addComponent(FacturaLB))
                    .addGroup(FacturaDialogLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(FacturaDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(FacturaDialogLayout.createSequentialGroup()
                                .addComponent(TotalLB)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(CostoLB, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(FacturaDialogLayout.createSequentialGroup()
                                .addComponent(IVALB)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(IVACLB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(73, Short.MAX_VALUE))
        );
        FacturaDialogLayout.setVerticalGroup(
            FacturaDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FacturaDialogLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(FacturaLB)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(FacturaDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TotalLB)
                    .addComponent(CostoLB, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(FacturaDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IVALB)
                    .addComponent(IVACLB, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        lb2.setText("Preparacion del plato:");

        bt1.setEnabled(false);
        bt1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt1MouseClicked(evt);
            }
        });

        bt2.setText("Terminar Pedido");
        bt2.setEnabled(false);
        bt2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                bt2MouseReleased(evt);
            }
        });

        TablaMenu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        TablaMenu.getTableHeader().setReorderingAllowed(false);
        TablaMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                TablaMenuMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(TablaMenu);

        lb1.setText("Tiempo transcurrido:");

        bt3.setText("Facturar");
        bt3.setEnabled(false);
        bt3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt3MouseClicked(evt);
            }
        });

        jLabel1.setText("Cantidad:");

        bt5.setText("Confirmar");
        bt5.setEnabled(false);
        bt5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt5MouseClicked(evt);
            }
        });

        tf1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tf1.setEnabled(false);
        tf1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf1KeyTyped(evt);
            }
        });

        bt6.setText("Modificar Pedido");
        bt6.setEnabled(false);
        bt6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt6MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bt6)
                                .addGap(18, 18, 18)
                                .addComponent(bt2)))
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tf1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(bt3)
                            .addComponent(bt5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lb1)
                                .addGap(18, 18, 18)
                                .addComponent(lb4, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lb2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bt1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(lb3, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lb3, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                    .addComponent(lbMesa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lb1)
                    .addComponent(lb4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lb2)
                    .addComponent(bt1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(tf1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(bt5)
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bt3)
                            .addComponent(bt2)
                            .addComponent(bt6))
                        .addGap(23, 23, 23))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 public static void mostrarFichero() {
        FileReader fr = null;
        try {
            File fichero = new File("platos.txt");
            fr = new FileReader(fichero);
            BufferedReader br = new BufferedReader(fr);
            leerFichero(br);
        } catch (Exception e) {
            System.out.println(e.getMessage());
        } finally {
            try {
                if (fr != null) {
                    fr.close();
                }
            } catch (Exception e) {
                System.out.println(e.getMessage());
            }
        }
    }

    public static void leerFichero(BufferedReader br) throws Exception {
        String linea;
        int sw = 0;
        int z = 0;
        int r = 0;
        linea = br.readLine();
        String plato;
        String ingr = "";
        while (linea != null) {
            sw = 0;
            for (int i = 0; i < linea.length(); i++) {
                // System.out.println("ChatAt(i): " + linea.charAt(i));
                if (linea.charAt(i) == ',' && sw == 0) {
                    plato = linea.substring(0, i);
                    TablaMenu.setValueAt(plato, z, 0);
                    sw = 1;
                } else if (sw == 1) {
                    for (int j = linea.length() - 1; j > 0; j--) {
                        if (linea.charAt(j) == ',') {
                            r = j;
                            break;
                        }
                    }
                    ingr = linea.substring(i, r);
                    TablaMenu.setValueAt(ingr, z, 1);
                    sw = 2;
                    ingr = linea.substring(r + 1, linea.length());
                    TablaMenu.setValueAt(ingr, z, 2);
                    z++;
                }

            }
            linea = br.readLine();
        }
    }

    void setstrpedido() {
        for (int i = 0; i < platos.size(); i++) {
            if (pedidos1 == null) {
                pedidos1 = ((Plato) platos.geto(i)).nombre + "x" + ((Plato) platos.geto(i)).cantidad;
            } else {
                pedidos1 = pedidos1 + "," + ((Plato) platos.geto(i)).nombre + "x" + ((Plato) platos.geto(i)).cantidad;
            }
        }
    }

    void getstrpedido() {
        int j = 0;
        String pe = "";
        Pedido p = new Pedido();
        for (int i = 0; i < Pedidos.size(); i++) {
            if (((Pedido) Pedidos.geto(i)).mesa == mesa1) {
                pe = ((Pedido) Pedidos.geto(i)).pedido;
                p = ((Pedido) Pedidos.geto(i));
            }
        }
        for (int i = 0; i < pe.length(); i++) {
            try {
                int f = i + 1;
                if (Integer.parseInt(pe.substring(i, f)) >= 1) {
                    int f2 = i - 1;
                    Plato plato = new Plato(pe.substring(j, f2), Integer.parseInt(pe.substring(i, f)), p.numpedido);
                    platos.add(plato);
                    j = f + 1;
                }
            } catch (Exception e) {

            }
        }
    }

    static int obindi() {
        int z = 0;
        for (int i = 0; i < Pedidos.size(); i++) {
            if (((Pedido) Pedidos.geto(i)).mesa == mesa1) {//no pude usar variable mesas1 debio a que no es static
                z = ((Pedido) Pedidos.geto(i)).numpedido;
            }
        }
        return z;
    }

    public static void actualizar2() {
        lb3.setText("Estado del Pedido");
        lb3.setText("Estado del Pedido");
        lb4.setText(((Pedido) Pedidos.geto(obindi())).horas + ":" + ((Pedido) Pedidos.geto(obindi())).minutos + ":" + ((Pedido) Pedidos.geto(obindi())).segundos);
        lb1.setVisible(true);
        lb2.setVisible(true);
        bt3.setVisible(true);
        bt3.setEnabled(false);
        bt2.setEnabled(false);
        bt5.setEnabled(false);
        TablaMenu.setEnabled(false);
        tf1.setEditable(false);
        bt6.setVisible(true);
        bt6.setEnabled(true);
        if (((Mesas) MeserosTabla.mesa.geto(MeserosTabla.x)).estado.equals("pro")) {
            bt1.setText("En Curso");
            bt1.setVisible(true);
            bt1.setEnabled(false);
        } else {
            if (((Mesas) MeserosTabla.mesa.geto(MeserosTabla.x)).estado.equals("listo")) {
                bt1.setText("Reclamar");
                bt1.setVisible(true);
                bt1.setEnabled(true);
                bt6.setEnabled(false);
                ((Pedido) Pedidos.geto(obindi())).Stop();
            } else if (((Mesas) MeserosTabla.mesa.geto(MeserosTabla.x)).estado.equals("reclamado")) {
               bt1.setText("Reclamado");
                bt1.setVisible(true);
                bt1.setEnabled(false);
                bt3.setEnabled(true);
                bt6.setEnabled(false);
            }
        }
    }

    void actualizar2pausa() {
        if (((Mesas) MesasMT.geto(mesa1 - 1)).estado.equals("Modif")) {
            bt1.setText("En Pausa");
            TablaMenu.setEnabled(true);
            bt2.setEnabled(true);
            tf1.setEditable(true);
            bt5.setEnabled(true);
            bt6.setEnabled(false);
            repaint();
        }
    }

    void generarTablafactura() {
        getstrpedido();
        DefaultTableModel modelo = new DefaultTableModel((platos.size()), 3);
        System.out.println(platos.size());
        System.out.println("hola");
        FacturaTable.setModel(modelo);
        JTableHeader th = FacturaTable.getTableHeader();
        TableColumnModel tcm = th.getColumnModel();
        TableColumn tc = tcm.getColumn(0);
        tc.setHeaderValue("Plato");
        tc.setResizable(false);
        TableColumn tc1 = tcm.getColumn(1);
        tc1.setHeaderValue("Cantidad");
        tc1.setResizable(false);
        TableColumn tc2 = tcm.getColumn(2);
        tc2.setHeaderValue("Precio.Unidad");
        tc2.setResizable(false);
        FacturaTable.setDefaultEditor(Object.class, null);
        th.repaint();
        double iva;
        for (int i = 0; i < platos.size(); i++) {
            String nomplato = ((Plato) platos.geto(i)).nombre;
            int cantplato = ((Plato) platos.geto(i)).cantidad;
            int precio = buscarprecioplato(nomplato);
            FacturaTable.setValueAt(nomplato, i, 0);
            FacturaTable.setValueAt(cantplato, i, 1);
            FacturaTable.setValueAt(precio, i, 2);
            preciototal = preciototal + (cantplato * precio);
        }
        iva = preciototal * 0.19;
        CostoLB.setText(preciototal + " COP$");
        IVACLB.setText(iva + " COP$");
        preciototal=preciototal+iva;
    }

    int buscarprecioplato(String plato) {
        int z = 0;
        for (int i = 0; i < TablaMenu.getRowCount(); i++) {
            if (TablaMenu.getValueAt(i, 0).toString().equals(plato)) {
                String d = ((String) TablaMenu.getValueAt(i, 2));
                d=d.replaceAll("\\s*", "");
                z = Integer.parseInt(d);
            }
        }
        return z;
    }

    private void bt3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt3MouseClicked
        if (bt3.isEnabled()) {
            generarTablafactura();
            int z = 0, sw = 0;
            List aux2 = MeserosTabla.mesaus;
            List aux3 = MeserosTabla.mesa;
            ((Mesas) aux3.geto(MeserosTabla.x)).dispo = "si";
            ((Mesas) aux3.geto(MeserosTabla.x)).estado = "noa";
            while (z < aux2.size() && sw == 0) {
                if ((MeserosTabla.x + 1) == ((Mesas) aux2.geto(z)).numero) {
                    aux2.remove(z);
                    ((Mesas) aux3.geto(MeserosTabla.x)).mesero = "";
                    ((Mesas) aux3.geto(MeserosTabla.x)).total = ((Mesas) aux3.geto(MeserosTabla.x)).total + preciototal;
                    MeserosTabla.mesaus = aux2;
                    MeserosTabla.mesa = aux3;
                    sw = 1;
                }
                z++;
            }
            Pedidos.remove(obindi());
            MeserosTabla.actualizar();
            MeserosTabla.lb6.setText("" + MeserosTabla.ac);
            MeserosTabla.click = false;
            numpe--;
            FacturaDialog.setResizable(false);
            FacturaDialog.setLocation(543, 230);
            FacturaDialog.setSize(400, 350);
            FacturaDialog.setVisible(true);
        }
    }//GEN-LAST:event_bt3MouseClicked

    int verificarcero(String p) {
        try {
            return Integer.parseInt(tf1.getText());
        } catch (Exception e) {
            return 0;
        }
    }

    private void TablaMenuMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaMenuMouseReleased
        bt5.setEnabled(false);
        tf1.setEnabled(true);
        tf1.setText(null);
        x1 = TablaMenu.rowAtPoint(evt.getPoint());
        y1 = TablaMenu.columnAtPoint(evt.getPoint());
        if (platos.isEmpty()) {
            bt2.setEnabled(false);
            bt5.setEnabled(false);
        } else {
            if (veriplato((String) TablaMenu.getValueAt(x1, 0))) {
                tf1.setText(((Plato) platos.geto(indiplato((String) TablaMenu.getValueAt(x1, 0)))).cantidad + "");
            } else {
                tf1.setText(0 + "");
            }
        }
        clickmenu = true;
    }//GEN-LAST:event_TablaMenuMouseReleased

    boolean veriplato(String n) {
        boolean t = false;
        for (int i = 0; i < platos.size(); i++) {
            if (((Plato) platos.geto(i)).nombre.equals(n)) {
                t = true;
            }
        }
        return t;
    }

    int indiplato(String n) {
        int z = 0;
        for (int i = 0; i < platos.size(); i++) {
            if (((Plato) platos.geto(i)).nombre.equals(n)) {
                z = i;
            }
        }
        return z;
    }

    private void bt1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt1MouseClicked
        if (bt1.isEnabled()) {
            JOptionPane.showMessageDialog(null, "Pedido reclamado, hasta el momento la factura esta lista!");
            bt3.setEnabled(true);

        }
        ((Mesas) MesasMT.geto(mesa1 - 1)).estado = "reclamado";
        bt1.setEnabled(false);
    }//GEN-LAST:event_bt1MouseClicked

    private void bt5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt5MouseClicked
        if (bt5.isEnabled()) {
            if (platos.isEmpty()) {//primer plato
                if (verificarcero(tf1.getText()) > 0 && clickmenu) {
                    Plato plato = new Plato((String) TablaMenu.getValueAt(x1, 0), verificarcero(tf1.getText()), numpe);
                    platos.add(plato);
                    bt2.setEnabled(true);
                }
            } else if (((Plato) platos.geto(indiplato((String) TablaMenu.getValueAt(x1, 0)))).nombre.equals((String) TablaMenu.getValueAt(x1, 0))) {//demas platos
                int i = indiplato((String) TablaMenu.getValueAt(x1, 0));
                if (verificarcero(tf1.getText()) == 0) {
                    platos.remove(i);
                } else {
                    ((Plato) platos.geto(i)).cantidad = verificarcero(tf1.getText());
                }
            } else {
                if (verificarcero(tf1.getText()) > 0 && clickmenu) {//demas platos
                    Plato plato = new Plato((String) TablaMenu.getValueAt(x1, 0), verificarcero(tf1.getText()), numpe);
                    platos.add(plato);
                }
            }
            tf1.setText(null);
        }
        if (platos.isEmpty()) {
            bt2.setEnabled(false);
        }
        clickmenu = false;
        bt5.setEnabled(false);
    }//GEN-LAST:event_bt5MouseClicked

    private void tf1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf1KeyTyped
        char key = evt.getKeyChar();
        if (!Character.isDigit(key) && (key != evt.VK_BACK_SPACE || key != evt.VK_ENTER)) {
            evt.consume();
        }
        if ((key == evt.VK_BACK_SPACE && tf1.getText().isEmpty()) || (verificarcero(tf1.getText()) == 0 && platos.isEmpty())) {
            bt5.setEnabled(false);
        } else if (key == evt.VK_ENTER && clickmenu && verificarcero(tf1.getText()) >= 0) {
            bt5.setEnabled(true);
        }
    }//GEN-LAST:event_tf1KeyTyped

    private void bt6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt6MouseClicked
        getstrpedido();
        if (bt6.isEnabled() && !platos.isEmpty()) {
            s = ((Plato) platos.geto(0)).numpe;
            System.out.println(s);
            if (((Pedido) Pedidos.geto(s)).minutos < 5) {
                ((Pedido) Pedidos.geto(s)).Suspend();
                ((Mesas) MesasMT.geto(mesa1 - 1)).estado = "Modif";
                actualizar2pausa();
            } else {
                JOptionPane.showMessageDialog(null, "Tiempo de cambio terminado");
            }
        }
    }//GEN-LAST:event_bt6MouseClicked

    private void bt2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt2MouseReleased
        if (bt2.isEnabled()) {
            setstrpedido();
            if (!((Mesas) MesasMT.geto(mesa1 - 1)).estado.equals("Modif")) {
                numpe++;
                Pedido p = new Pedido(pedidos1, mesa1, true, numpe);
                Pedidos.add(p);
            } else {
                ((Pedido) Pedidos.geto(s)).pedido = pedidos1;
                ((Pedido) Pedidos.geto(s)).Resume();
            }
            pedidos1 = null;
            bt5.setEnabled(false);
            tf1.setEditable(false);
            platos.removeAll();
            if (sw == 1) {
                lb3.setText("Pedido de la Mesa");
                sw = 0;
            } else if (sw == 0) {
                lb3.setText("Menu");
                sw = 1;
            }
            List aux = MeserosTabla.mesa;
            ((Mesas) aux.geto(MeserosTabla.x)).estado = "pro";
            MeserosTabla.mesa = aux;
            MeserosTabla.actualizar();
        }
    }//GEN-LAST:event_bt2MouseReleased

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (((Mesas) MesasMT.geto(mesa1 - 1)).estado.equals("Modif")) {
            JOptionPane.showMessageDialog(null, "No puede cerrar hasta que se termine la modificacion!");
        } else {
            MeserosTabla.click = false;
            platos.removeAll();
            this.dispose();
            FacturaDialog.dispose();
        }
    }//GEN-LAST:event_formWindowClosing

    private void FacturaDialogWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_FacturaDialogWindowClosed
        this.dispose();
    }//GEN-LAST:event_FacturaDialogWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CostoLB;
    private javax.swing.JDialog FacturaDialog;
    private javax.swing.JLabel FacturaLB;
    private javax.swing.JTable FacturaTable;
    private javax.swing.JLabel IVACLB;
    private javax.swing.JLabel IVALB;
    public static javax.swing.JTable TablaMenu;
    private javax.swing.JLabel TotalLB;
    public static javax.swing.JButton bt1;
    public static javax.swing.JButton bt2;
    public static javax.swing.JButton bt3;
    public static javax.swing.JButton bt5;
    public static javax.swing.JButton bt6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public static javax.swing.JLabel lb1;
    public static javax.swing.JLabel lb2;
    public static javax.swing.JLabel lb3;
    public static javax.swing.JLabel lb4;
    private javax.swing.JLabel lbMesa;
    public static javax.swing.JTextField tf1;
    // End of variables declaration//GEN-END:variables
}
